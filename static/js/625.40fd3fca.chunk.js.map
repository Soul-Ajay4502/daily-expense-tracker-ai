{"version":3,"file":"static/js/625.40fd3fca.chunk.js","mappings":"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","sources":["components/Expenses/ExpenseTable.js","components/Expenses/ExpenseForm.js","components/Dashboard/Report.js","components/Dashboard/AiReport.js","components/ReportTabs.js","components/shared/Footer.js","utils/fetchAiResponse.js","components/Dashboard/openAiReport.js","components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\r\n  Paper, Typography\r\n} from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport dayjs from 'dayjs';\r\n\r\nconst ExpenseTable = ({ filter }) => {\r\n  const { items, status } = useSelector((state) => state.expenses);\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n\r\n  useEffect(() => {\r\n    const now = dayjs();\r\n    let filtered = items;\r\n\r\n    if (filter === 'day') {\r\n      filtered = items.filter(item => {\r\n        const itemDate = item.date ? \r\n          (item.date.toDate ? item.date.toDate() : new Date(item.date)) : \r\n          null;\r\n          \r\n        return itemDate && dayjs(itemDate).isSame(now, 'day');\r\n      });\r\n    } else if (filter === 'week') {\r\n      filtered = items.filter(item => {\r\n        const itemDate = item.date ? \r\n          (item.date.toDate ? item.date.toDate() : new Date(item.date)) : \r\n          null;\r\n          \r\n        return itemDate && dayjs(itemDate).isSame(now, 'week');\r\n      });\r\n    } else if (filter === 'month') {\r\n      filtered = items.filter(item => {\r\n        const itemDate = item.date ? \r\n          (item.date.toDate ? item.date.toDate() : new Date(item.date)) : \r\n          null;\r\n          \r\n        return itemDate && dayjs(itemDate).isSame(now, 'month');\r\n      });\r\n    }\r\n\r\n    setFilteredItems(filtered);\r\n  }, [filter, items]);\r\n\r\n  if (status === 'loading') {\r\n    return <Typography>Loading...</Typography>;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: '20px' }}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Date (MM-DD-YY)</TableCell>\r\n            <TableCell>Income Type</TableCell>\r\n            <TableCell>Income Amount</TableCell>\r\n            <TableCell>Expense Type</TableCell>\r\n            <TableCell>Expense Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filteredItems.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{dayjs(row.date.toDate ? row.date.toDate() : new Date(row.date)).format('MM/DD/YYYY')}</TableCell>\r\n              <TableCell>{row.incomeType || '-'}</TableCell>\r\n              <TableCell>{row.incomeAmount || '-'}</TableCell>\r\n              <TableCell>{row.expenseType || '-'}</TableCell>\r\n              <TableCell>{row.expenseAmount || '-'}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {filteredItems.length === 0 && (\r\n            <TableRow>\r\n              <TableCell colSpan={5} align=\"center\">\r\n                No records found.\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default ExpenseTable;\r\n","// src/components/Expenses/ExpenseForm.js\r\nimport React from 'react';\r\nimport {\r\n  Dialog, DialogTitle, DialogContent, DialogActions,\r\n  TextField, Button, MenuItem, Grid\r\n} from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addExpense } from '../../redux/slices/expenseSlice';\r\nimport dayjs from 'dayjs';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst incomeTypes = ['Salary', 'Bonus', 'Investment', 'Rental Income', 'Other'];\r\nconst expenseTypes = ['Rent', 'Food', 'Travel', 'Cosmetics', 'Bills', 'Other'];\r\n\r\nconst ExpenseForm = ({ open, handleClose }) => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // Validation schema using Yup\r\n  const validationSchema = Yup.object().shape({\r\n    date: Yup.date().required(\"Date is required.\"),\r\n    incomeType: Yup.string().required(\"Income type is required.\"),\r\n    incomeAmount: Yup.number()\r\n      .required()\r\n      .typeError(\"Must be a number.\")\r\n      .positive(\"Amount must be positive.\")\r\n      .max(999999999, \"Amount too large.\"),\r\n    expenseType: Yup.string().nullable(),\r\n    expenseAmount: Yup.number()\r\n      .nullable()\r\n      .typeError(\"Must be a number.\")\r\n      .positive(\"Amount must be positive.\")\r\n      .max(999999999, \"Amount too large.\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    date: dayjs().format('YYYY-MM-DD'),\r\n    incomeType: '',\r\n    incomeAmount: '',\r\n    expenseType: '',\r\n    expenseAmount: '',\r\n  };\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    const expenseData = {\r\n      userId: user.uid,\r\n      date: new Date(values.date),\r\n      incomeType: values.incomeType,\r\n      incomeAmount: values.incomeAmount ? parseFloat(values.incomeAmount) : 0,\r\n      expenseType: values.expenseType || null,\r\n      expenseAmount: values.expenseAmount ? parseFloat(values.expenseAmount) : 0,\r\n    };\r\n    dispatch(addExpense(expenseData));\r\n    handleClose();\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>Add Income/Expense</DialogTitle>\r\n      <DialogContent>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ handleChange, setFieldValue,values, errors, touched }) => (\r\n            <Form>\r\n              <Grid container spacing={2} style={{ marginTop: '10px' }}>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    as={TextField}\r\n                    label=\"Date\"\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    error={touched.date && !!errors.date}\r\n                    helperText={touched.date && <ErrorMessage name=\"date\" />}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    as={TextField}\r\n                    select\r\n                    label=\"Income Type\"\r\n                    name=\"incomeType\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={touched.incomeType && <ErrorMessage name=\"incomeType\" />}\r\n                  >\r\n                    {incomeTypes.map((option) => (\r\n                      <MenuItem key={option} value={option}>\r\n                        {option}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Field>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    as={TextField}\r\n                    label=\"Income Amount\"\r\n                    name=\"incomeAmount\"\r\n                    fullWidth\r\n                    error={touched.incomeAmount && !!errors.incomeAmount}\r\n                    helperText={touched.incomeAmount && <ErrorMessage name=\"incomeAmount\" />}\r\n                    disabled={!values.incomeType}\r\n                    title={!values.incomeType?'Select any Income Type':''}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    as={TextField}\r\n                    select\r\n                    label=\"Expense Type\"\r\n                    name=\"expenseType\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={touched.expenseType && <ErrorMessage name=\"expenseType\" />}\r\n                  >\r\n                    {expenseTypes.map((option) => (\r\n                      <MenuItem key={option} value={option}>\r\n                        {option}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Field>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    as={TextField}\r\n                    label=\"Expense Amount\"\r\n                    name=\"expenseAmount\"\r\n                    fullWidth\r\n                    error={touched.expenseAmount && !!errors.expenseAmount}\r\n                    helperText={touched.expenseAmount && <ErrorMessage name=\"expenseAmount\" />}\r\n                    disabled={!values.expenseType}\r\n                    title={!values.expenseType?'Select any Expense Type':''}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"secondary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                  Add\r\n                </Button>\r\n              </DialogActions>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport { Button, Typography, Paper, CircularProgress, Box } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport { setReport, setExpenseData, setIncomeTotal, setExpenseTotal } from '../../redux/slices/reportSlice'; // Import actions\r\n\r\nconst Report = () => {\r\n  const { items } = useSelector((state) => state.expenses);\r\n  const dispatch = useDispatch();\r\n  const { reportData, expenseData, incomeTotal, expenseTotal } = useSelector((state) => state.report); // Access report data from Redux\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const generateReport = () => {\r\n    setLoading(true);\r\n\r\n    const income = items.reduce((acc, item) => acc + (item.incomeAmount || 0), 0);\r\n    const expenses = items.reduce((acc, item) => acc + (item.expenseAmount || 0), 0);\r\n    const net = income - expenses;\r\n\r\n    const expenseCategories = items.reduce((acc, item) => {\r\n      if (item.expenseType) {\r\n        acc[item.expenseType] = (acc[item.expenseType] || 0) + (item.expenseAmount || 0);\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    const expenseChartData = Object.entries(expenseCategories).map(([category, amount]) => ({\r\n      name: category,\r\n      value: amount,\r\n    }));\r\n\r\n    // Create an array for the report content\r\n    const reportContent = [\r\n      { label: 'Expense ', value: '' },\r\n      { label: 'Total Income', value: `₹${income.toFixed(2)}` },\r\n      { label: 'Total Expenses', value: `₹${expenses.toFixed(2)}` },\r\n      { label: 'Net Savings', value: `₹${net < 0 ? 0 : net.toFixed(2)}` },\r\n      { label: 'Net Loss', value: `₹${net > 0 ? 0 : net.toFixed(2)}` },\r\n      { label: 'Expenses by Category', value: '' },\r\n      ...Object.entries(expenseCategories).map(([category, amount]) => ({\r\n        label: category,\r\n        value: `₹${amount.toFixed(2)}`,\r\n      })),\r\n      { label: 'Recommendations', value: '' },\r\n      ...(net < 0\r\n        ? [\r\n          { label: '1. Consider reducing discretionary spending to improve net savings.', value: '' },\r\n          { label: '2. Review recurring expenses and identify potential savings.', value: '' },\r\n        ]\r\n        : [\r\n          { label: '1. Maintain current spending habits to sustain savings.', value: '' },\r\n          { label: '2. Consider investing surplus income for better financial growth.', value: '' },\r\n        ]),\r\n    ];\r\n\r\n    // Dispatch actions to update the Redux store\r\n    dispatch(setReport(reportContent));\r\n    dispatch(setExpenseData(expenseChartData));\r\n    dispatch(setIncomeTotal(income));\r\n    dispatch(setExpenseTotal(expenses));\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{ padding: '20px', marginTop: '20px' }}>\r\n      <Typography\r\n        variant=\"h2\"\r\n        textAlign=\"center\"\r\n        borderRadius=\"20px\"\r\n        sx={{\r\n          boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.2)',\r\n        }}\r\n      >\r\n        Financial Report\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={generateReport}\r\n        style={{ marginTop: '10px' }}\r\n      >\r\n        Generate Report\r\n      </Button>\r\n      {loading &&\r\n\r\n        <Box\r\n          position='fixed'\r\n          top='0'\r\n          left='0'\r\n          width='100%'\r\n          bgcolor=\"rgba(255, 255, 255, 0.8)\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          height=\"100vh\"\r\n        ><CircularProgress style={{ marginLeft: '10px' }} />\r\n        </Box>\r\n      }\r\n      {reportData.length > 0 && (\r\n        <Box style={{ marginTop: '20px' }}>\r\n          <Box\r\n            sx={{\r\n              borderRadius: 1,\r\n              p: 2,\r\n              bgcolor: '#ede8eb',\r\n            }}\r\n          >\r\n            {reportData.map((item, index) => (\r\n              <Typography\r\n                key={index}\r\n                variant=\"body1\"\r\n                style={{ marginBottom: '10px', fontWeight: item.value === '' ? 'bold' : 'normal' }}\r\n              >\r\n                {item.label}{item.value && `: ${item.value}`}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n          <h2>Chart Representations</h2>\r\n          <Box\r\n            sx={{\r\n              borderRadius: 1,\r\n              p: 2,\r\n              bgcolor: '#ede8eb',\r\n            }}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart\r\n                data={[\r\n                  { name: 'Total Income', value: incomeTotal },\r\n                  { name: 'Total Expenses', value: expenseTotal },\r\n                ]}\r\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n              >\r\n                <XAxis dataKey=\"name\"\r\n                  tick={{ color: '#000', fontSize: 14, fontWeight: 'bold', fill: '#4a4a4a' }} />\r\n                <YAxis\r\n                  tick={{ color: '#000', fontSize: 14, fontWeight: 'bold', fill: '#4a4a4a' }} />\r\n                <Tooltip />\r\n                <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={expenseData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  labelLine={false}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                >\r\n                  {expenseData.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={`#${Math.floor(Math.random() * 16777215).toString(16)}`}\r\n                    />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n","import React, { useState } from 'react';\r\nimport { Button, Typography, Paper, CircularProgress, Box } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAiReport, setAiIncomeTotal, setAiExpenseTotal, setHasRisk } from '../../redux/slices/aiReportSlice'; // Import AI actions\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nconst AiReport = () => {\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector((state) => state.expenses);\r\n\r\n  const { aiReportData, hasRisk } = useSelector((state) => state.aiReport);\r\n\r\n  const [report, setReport] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const prepareData = (items) => {\r\n    const incomeTotal = items.reduce((acc, item) => acc + (item.incomeAmount || 0), 0);\r\n    const expenseTotal = items.reduce((acc, item) => acc + (item.expenseAmount || 0), 0);\r\n    const netSavings = incomeTotal - expenseTotal;\r\n\r\n    const expenseCategories = items.reduce((acc, item) => {\r\n      if (item.expenseType) {\r\n        acc[item.expenseType] = (acc[item.expenseType] || 0) + (item.expenseAmount || 0);\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    return {\r\n      incomeTotal,\r\n      expenseTotal,\r\n      netSavings,\r\n      expenseCategories,\r\n    };\r\n  };\r\n\r\n  const createModel = () => {\r\n    const model = tf.sequential();\r\n\r\n    model.add(tf.layers.dense({ inputShape: [2], units: 16, activation: 'relu' }));\r\n    model.add(tf.layers.dense({ units: 8, activation: 'relu' }));\r\n    model.add(tf.layers.dense({ units: 1, activation: 'sigmoid' }));\r\n\r\n    model.compile({ optimizer: 'adam', loss: 'binaryCrossentropy', metrics: ['accuracy'] });\r\n    return model;\r\n  };\r\n\r\n  const trainModel = async (model, data) => {\r\n    const { incomeTotal, expenseTotal } = data;\r\n\r\n    const xs = tf.tensor2d([[incomeTotal, expenseTotal]]);\r\n    const ys = tf.tensor2d([[0.5]]); // Example target\r\n\r\n    await model.fit(xs, ys, {\r\n      epochs: 100,\r\n      batchSize: 1,\r\n    });\r\n\r\n    return model;\r\n  };\r\n\r\n  const generateFinancialReport = async (items) => {\r\n    const data = prepareData(items);\r\n    const model = createModel();\r\n\r\n    await trainModel(model, data);\r\n\r\n    const prediction = model.predict(tf.tensor2d([[data.incomeTotal, data.expenseTotal]])).arraySync();\r\n\r\n    // Based on the prediction, generate the report\r\n    dispatch(setHasRisk(data.netSavings < 0));\r\n    return `Net Savings Prediction: ${data.netSavings > 0 ? \"Positive\" : \"Negative\"} \\n\r\n      Your estimated savings trend is: ${prediction[0][0] > 0.5 ? \"Favorable\" : \"Needs Improvement\"}.\\n\r\n      Consider reviewing your expenses in categories such as ${Object.keys(data.expenseCategories).join(', ')}.`;\r\n  };\r\n\r\n  const generateReport = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const generatedReport = await generateFinancialReport(items);\r\n      setReport(generatedReport);\r\n\r\n      // Calculate income, expenses, and net\r\n      const income = items.reduce((acc, item) => acc + (item.incomeAmount || 0), 0);\r\n      const expenses = items.reduce((acc, item) => acc + (item.expenseAmount || 0), 0);\r\n      const net = income - expenses;\r\n\r\n      // Categorize expenses\r\n      const expenseCategories = items.reduce((acc, item) => {\r\n        if (item.expenseType) {\r\n          acc[item.expenseType] = (acc[item.expenseType] || 0) + (item.expenseAmount || 0);\r\n        }\r\n        return acc;\r\n      }, {});\r\n\r\n      // Prepare report content\r\n      const reportContent = [\r\n        { label: 'Expense ', value: '' },\r\n        { label: 'Total Income', value: `₹${income.toFixed(2)}` },\r\n        { label: 'Total Expenses', value: `₹${expenses.toFixed(2)}` },\r\n        { label: 'Net Savings', value: `₹${net < 0 ? 0 : net.toFixed(2)}` },\r\n        { label: 'Net Loss', value: `₹${net > 0 ? 0 : net.toFixed(2)}` },\r\n        { label: 'Expenses by Category', value: '' },\r\n        ...Object.entries(expenseCategories).map(([category, amount]) => ({\r\n          label: category,\r\n          value: `₹${amount.toFixed(2)}`,\r\n        })),\r\n      ];\r\n\r\n      // Dispatch actions to update the Redux store\r\n      dispatch(setAiReport({ report: generatedReport, content: reportContent })); // Pass an object\r\n      dispatch(setAiIncomeTotal(income)); // Pass the latest income total\r\n      dispatch(setAiExpenseTotal(expenses)); // Pass the latest expense total\r\n    } catch (error) {\r\n      console.error(\"Error generating report:\", error);\r\n      setReport(\"Failed to generate report. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Paper style={{\r\n      padding: '20px',\r\n      marginTop: '20px',\r\n      // background: hasRisk === null ? 'white' : hasRisk ? 'red' : 'green'\r\n    }}>\r\n      <Typography\r\n        variant=\"h2\"\r\n        textAlign=\"center\"\r\n        borderRadius=\"20px\"\r\n        sx={{\r\n          boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.2)', // You can adjust these values for the desired shadow effect\r\n        }}\r\n      >\r\n        AI-Powered Financial Report\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={generateReport}\r\n        style={{ marginTop: '10px' }}>\r\n        Generate AI Report\r\n      </Button>\r\n      {loading &&\r\n\r\n        <Box\r\n          position='fixed'\r\n          top='0'\r\n          left='0'\r\n          width='100%'\r\n          bgcolor=\"rgba(255, 255, 255, 0.8)\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          height=\"100vh\"\r\n        ><CircularProgress style={{ marginLeft: '10px' }} />\r\n        </Box>\r\n      }\r\n      {report && (\r\n        <Box\r\n          variant=\"h6\"\r\n          bgcolor={hasRisk === null ? 'white' : hasRisk ? '#f5252f' : '#28de4f'}\r\n          position={'relative'}\r\n          sx={{\r\n            borderRadius: 1,\r\n            px: 4,\r\n            py: 8,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'pre-line',\r\n            mt: 2\r\n          }}>\r\n\r\n\r\n          {report}\r\n        </Box>\r\n      )}\r\n      {aiReportData.report?.length > 0 && (\r\n        <Typography variant=\"body2\" style={{ marginTop: '20px' }}>\r\n          Last Generated Report:\r\n          <Box\r\n            sx={{\r\n              borderRadius: 1,\r\n              p: 2,\r\n              bgcolor: hasRisk === null ? 'white' : hasRisk ? '#f5252f' : '#28de4f',\r\n            }}\r\n          >\r\n            {hasRisk !== null &&\r\n              <Typography variant=\"h4\" textAlign='center'>\r\n                {hasRisk ? 'Need Attension' : 'Good'}\r\n              </Typography>}\r\n            {aiReportData.content.map((item, index) => (\r\n              <Typography\r\n                key={index}\r\n                variant=\"body1\"\r\n                style={{ marginBottom: '10px', fontWeight: item.value === '' ? 'bold' : 'normal' }}\r\n              >\r\n                {item.label}{item.value && `: ${item.value}`}\r\n              </Typography>\r\n            ))}\r\n\r\n            {!report && <Box\r\n              variant=\"h6\"\r\n              bgcolor={'#58b9ed'}\r\n              position={'relative'}\r\n              sx={{\r\n                borderRadius: 1,\r\n                px: 2,\r\n                py: 8,\r\n                overflow: 'hidden',\r\n                whiteSpace: 'pre-line'\r\n              }}>\r\n\r\n              <Box\r\n                position={'absolute'}\r\n                variant=\"h6\"\r\n                bgcolor={'violet'}\r\n                sx={{\r\n                  left: '-5px',\r\n                  top: '20px',\r\n                  borderRadius: 2,\r\n                  px: 2,\r\n                  width: '120px',\r\n                  py: '4px',\r\n                }}>Model Suggestion</Box>\r\n\r\n              {aiReportData?.report}\r\n            </Box>}\r\n          </Box>\r\n        </Typography>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AiReport;\r\n","\r\n  // src/components/TabsComponent.js\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box >\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function ReportTabs({Report,AiReport,OpenAiReport}) {\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: 'background.paper', width: '100%' }}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"inherit\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Financial Report\" {...a11yProps(0)} />\r\n          <Tab label=\"AI Report (custom model)\" {...a11yProps(1)} />\r\n          <Tab label=\"openAI Report\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0} dir={theme.direction}>\r\n        <Report /> \r\n      </TabPanel>\r\n      <TabPanel value={value} index={1} dir={theme.direction}>\r\n        <AiReport /> \r\n      </TabPanel>\r\n      <TabPanel value={value} index={2} dir={theme.direction}>\r\n        <OpenAiReport /> \r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@mui/material';\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n          Developed by Ajayraj\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// src/utils/fetchAiResponse.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst HUGGING_FACE_API_URL = process.env.REACT_APP_HUGGING_FACE_API_URL;\r\nconst HUGGING_FACE_API_KEY = process.env.REACT_APP_HUGGING_FACE_API_KEY;\r\n\r\nexport const fetchAiResponse = async (text) => {\r\n  try {\r\n    const response = await axios.post(\r\n      HUGGING_FACE_API_URL,\r\n      { inputs: text },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${HUGGING_FACE_API_KEY}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data.length > 0 ? response.data[0].generated_text : 'No response from AI';\r\n  } catch (error) {\r\n    console.error('Error fetching AI response:', error);\r\n    throw new Error('Failed to fetch AI response');\r\n  }\r\n};\r\n","// src/components/AiReport.jsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Typography, Paper, CircularProgress, Box } from '@mui/material';\r\nimport { fetchAiResponse } from '../../utils/fetchAiResponse'; // Adjust the path as needed\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst OpenAiReport = () => {\r\n  const [reportContent, setReportContent] = useState('Your report content');\r\n  const { items } = useSelector((state) => state.expenses);\r\n\r\n  const [aiResponse, setAiResponse] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const generateReport = () => {\r\n\r\n    const income = items.reduce((acc, item) => acc + (item.incomeAmount || 0), 0);\r\n    const expenses = items.reduce((acc, item) => acc + (item.expenseAmount || 0), 0);\r\n    const net = income - expenses;\r\n\r\n    const expenseCategories = items.reduce((acc, item) => {\r\n      if (item.expenseType) {\r\n        acc[item.expenseType] = (acc[item.expenseType] || 0) + (item.expenseAmount || 0);\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    // Convert report content to text format\r\n    const reportText = `\r\n                I need a financial report based on the following data with your suggessions to improve saving habbit please give full details:\r\n\r\n                1. **Total Income:** ₹${income.toFixed(2)}\r\n                2. **Total Expenses:** ₹${expenses.toFixed(2)}\r\n                3. **Net Savings:** ₹${net < 0 ? 0 : net.toFixed(2)}\r\n                4. **Net Loss:** ₹${net > 0 ? 0 : net.toFixed(2)}\r\n                5. **Expenses by Category:**\r\n                ${Object.entries(expenseCategories).map(([category, amount]) => `   - ${category}: ₹${amount.toFixed(2)}`).join('\\n')}\r\n                6. **Recommendations:**\r\n                ${net < 0\r\n        ? '   - Consider reducing discretionary spending to improve net savings.\\n   - Review recurring expenses and identify potential savings.\"cut\"'\r\n        : '   - Maintain current spending habits to sustain savings.\\n   - Consider investing surplus income for better financial growth.\"cut\" '}\r\n                `;\r\n\r\n    return reportText;\r\n  };\r\n\r\n  const generateAiReport = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n\r\n      const response = await fetchAiResponse(generateReport());\r\n      const result = response.split('\"cut\"')[1].trim(); // Gets everything after \"cut\" because the AI response include the input data too\r\n\r\n      setAiResponse(result);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper style={{ padding: '20px', marginTop: '20px' }}>\r\n      <Typography\r\n        variant=\"h2\"\r\n        textAlign=\"center\"\r\n        borderRadius=\"20px\"\r\n        sx={{\r\n          boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.2)', // You can adjust these values for the desired shadow effect\r\n        }}\r\n      >\r\n        openAI-Powered Financial Report\r\n      </Typography>      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={generateAiReport}\r\n        disabled={loading}\r\n        style={{ marginTop: '10px' }}\r\n      >\r\n        Generate AI Report\r\n      </Button>\r\n      {loading &&\r\n\r\n        <Box\r\n        position='fixed'\r\n        top='0'\r\n        left='0'\r\n        width='100%'\r\n         bgcolor=\"rgba(255, 255, 255, 0.8)\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          height=\"100vh\"\r\n        ><CircularProgress style={{ marginLeft: '10px' }} />\r\n        </Box>\r\n      }\r\n      {aiResponse && (\r\n        <Box\r\n          sx={{ marginTop: '20px', padding: '10px', backgroundColor: '#f0f0f0', borderRadius: '4px' }}\r\n        >\r\n          <Typography variant=\"h6\">AI Suggestions:</Typography>\r\n          <Typography whiteSpace={'pre-line'}>{aiResponse}</Typography>\r\n        </Box>\r\n      )}\r\n      {error && (\r\n        <Typography variant=\"body1\" color=\"error\" style={{ marginTop: '10px' }}>\r\n          Error: {error}\r\n        </Typography>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default OpenAiReport;\r\n","// src/components/Dashboard/Dashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Grid, Button, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\r\nimport ExpenseTable from '../Expenses/ExpenseTable';\r\nimport ExpenseForm from '../Expenses/ExpenseForm';\r\nimport Report from './Report';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchExpenses } from '../../redux/slices/expenseSlice';\r\nimport AiReport from './AiReport';\r\nimport ReportTabs from '../ReportTabs';\r\nimport Footer from '../shared/Footer';\r\nimport OpenAiReport from './openAiReport';\r\n\r\nconst Dashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector((state) => state.auth);\r\n    const { items, status } = useSelector((state) => state.expenses);\r\n    const [openForm, setOpenForm] = useState(false);\r\n    const [filter, setFilter] = useState('all'); // all, day, week, month\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            dispatch(fetchExpenses(user.uid));\r\n        }\r\n    }, [dispatch, user]);\r\n\r\n    const handleAddClick = () => {\r\n        setOpenForm(true);\r\n    };\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Container maxWidth=\"lg\" style={{ marginTop: '20px',marginBottom:'20px',minHeight:'90vh' }}>\r\n            <Grid container spacing={3} style={{ paddingTop: '14%' }}>\r\n                <Grid item xs={12}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddClick}>\r\n                        Add Income/Expense\r\n                    </Button>\r\n                    <FormControl size=\"small\" style={{ marginLeft: '20px', minWidth: 120 }}>\r\n                        <InputLabel id=\"filter-label\">Filter</InputLabel>\r\n                        <Select\r\n                            labelId=\"filter-label\"\r\n                            value={filter}\r\n                            label=\"Filter\"\r\n                            onChange={handleFilterChange}\r\n                        >\r\n                            <MenuItem value=\"all\">All</MenuItem>\r\n                            <MenuItem value=\"day\">Day(Today)</MenuItem>\r\n                            <MenuItem value=\"week\">Week(This Week)</MenuItem>\r\n                            <MenuItem value=\"month\">Month(This Month)</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <ExpenseTable filter={filter} />\r\n                </Grid>\r\n                {items.length > 0 &&\r\n                    <Grid item xs={12}>\r\n                        <ReportTabs\r\n                            Report={Report}\r\n                            AiReport={AiReport} \r\n                            OpenAiReport={OpenAiReport}/>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n            <ExpenseForm open={openForm} handleClose={() => setOpenForm(false)} />\r\n        </Container>\r\n        <Footer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","filter","items","status","useSelector","state","expenses","filteredItems","setFilteredItems","useState","useEffect","now","dayjs","filtered","item","itemDate","date","toDate","Date","isSame","_jsx","Typography","children","TableContainer","component","Paper","style","marginTop","_jsxs","Table","TableHead","TableRow","TableCell","TableBody","map","row","format","incomeType","incomeAmount","expenseType","expenseAmount","id","length","colSpan","align","incomeTypes","expenseTypes","open","handleClose","dispatch","useDispatch","user","auth","validationSchema","Yup","shape","required","typeError","positive","max","nullable","initialValues","Dialog","onClose","DialogTitle","DialogContent","Formik","onSubmit","handleSubmit","values","_ref2","resetForm","expenseData","userId","uid","parseFloat","addExpense","_ref3","handleChange","setFieldValue","errors","touched","Form","Grid","container","spacing","xs","Field","as","TextField","label","type","name","fullWidth","InputLabelProps","shrink","error","helperText","ErrorMessage","select","onChange","option","MenuItem","value","disabled","title","DialogActions","Button","onClick","color","variant","Report","reportData","incomeTotal","expenseTotal","report","loading","setLoading","padding","textAlign","borderRadius","sx","boxShadow","generateReport","income","reduce","acc","net","expenseCategories","expenseChartData","Object","entries","category","amount","reportContent","toFixed","setReport","setExpenseData","setIncomeTotal","setExpenseTotal","Box","position","top","left","width","bgcolor","display","justifyContent","alignItems","height","CircularProgress","marginLeft","p","index","marginBottom","fontWeight","ResponsiveContainer","BarChart","data","margin","right","bottom","XAxis","dataKey","tick","fontSize","fill","YAxis","Tooltip","Bar","PieChart","Pie","cx","cy","labelLine","outerRadius","entry","Cell","Math","floor","random","toString","Legend","AiReport","_aiReportData$report","aiReportData","hasRisk","aiReport","generateFinancialReport","async","netSavings","prepareData","model","createModel","tf","add","inputShape","units","activation","compile","optimizer","loss","metrics","ys","fit","epochs","batchSize","trainModel","prediction","predict","arraySync","setHasRisk","keys","join","generatedReport","setAiReport","content","setAiIncomeTotal","setAiExpenseTotal","console","px","py","overflow","whiteSpace","mt","TabPanel","props","other","role","hidden","a11yProps","ReportTabs","OpenAiReport","theme","useTheme","setValue","React","AppBar","Tabs","event","newValue","indicatorColor","textColor","Tab","dir","direction","Footer","Toolbar","flexGrow","setReportContent","aiResponse","setAiResponse","setError","response","axios","post","process","inputs","text","headers","Authorization","generated_text","Error","fetchAiResponse","result","split","trim","err","message","backgroundColor","Dashboard","openForm","setOpenForm","setFilter","fetchExpenses","_Fragment","Container","maxWidth","minHeight","paddingTop","handleAddClick","FormControl","size","minWidth","InputLabel","Select","labelId","target","ExpenseTable","ExpenseForm"],"sourceRoot":""}