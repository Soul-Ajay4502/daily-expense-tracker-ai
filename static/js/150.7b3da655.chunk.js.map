{"version":3,"file":"static/js/150.7b3da655.chunk.js","mappings":"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","sources":["components/Expenses/ExpenseTable.js","components/Expenses/ExpenseForm.js","components/Dashboard/Report.js","components/Dashboard/AiReport.js","components/ReportTabs.js","components/shared/Footer.js","components/Dashboard/openAiReport.js","utils/fetchAiResponse.js","components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Typography,\r\n    IconButton,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\nimport { removeExpense } from \"../../redux/slices/expenseSlice\";\r\n\r\nconst ExpenseTable = ({ filter }) => {\r\n    const dispatch = useDispatch();\r\n    const { items, status } = useSelector((state) => state.expenses);\r\n    const [filteredItems, setFilteredItems] = useState(items);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedExpenseId, setSelectedExpenseId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const now = dayjs();\r\n        let filtered = items;\r\n\r\n        if (filter === \"day\") {\r\n            filtered = items.filter((item) => {\r\n                const itemDate = item.date\r\n                    ? item.date.toDate\r\n                        ? item.date.toDate()\r\n                        : new Date(item.date)\r\n                    : null;\r\n\r\n                return itemDate && dayjs(itemDate).isSame(now, \"day\");\r\n            });\r\n        } else if (filter === \"week\") {\r\n            filtered = items.filter((item) => {\r\n                const itemDate = item.date\r\n                    ? item.date.toDate\r\n                        ? item.date.toDate()\r\n                        : new Date(item.date)\r\n                    : null;\r\n\r\n                return itemDate && dayjs(itemDate).isSame(now, \"week\");\r\n            });\r\n        } else if (filter === \"month\") {\r\n            filtered = items.filter((item) => {\r\n                const itemDate = item.date\r\n                    ? item.date.toDate\r\n                        ? item.date.toDate()\r\n                        : new Date(item.date)\r\n                    : null;\r\n\r\n                return itemDate && dayjs(itemDate).isSame(now, \"month\");\r\n            });\r\n        }\r\n\r\n        setFilteredItems(filtered);\r\n    }, [filter, items]);\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setSelectedExpenseId(id);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDeleteConfirm = () => {\r\n        if (selectedExpenseId) {\r\n            dispatch(removeExpense(selectedExpenseId));\r\n            setOpen(false);\r\n            setSelectedExpenseId(null);\r\n        }\r\n    };\r\n\r\n    const handleDeleteCancel = () => {\r\n        setOpen(false);\r\n        setSelectedExpenseId(null);\r\n    };\r\n\r\n    if (status === \"loading\") {\r\n        return <Typography>Loading...</Typography>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} style={{ marginTop: \"20px\" }}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Date (MM-DD-YY)</TableCell>\r\n                            <TableCell>Income Type</TableCell>\r\n                            <TableCell>Income Amount</TableCell>\r\n                            <TableCell>Expense Type</TableCell>\r\n                            <TableCell>Expense Amount</TableCell>\r\n                            <TableCell>Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {filteredItems.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell>\r\n                                    {dayjs(\r\n                                        row.date.toDate\r\n                                            ? row.date.toDate()\r\n                                            : new Date(row.date)\r\n                                    ).format(\"MM/DD/YYYY\")}\r\n                                </TableCell>\r\n                                <TableCell>{row.incomeType || \"-\"}</TableCell>\r\n                                <TableCell>{row.incomeAmount || \"-\"}</TableCell>\r\n                                <TableCell>{row.expenseType || \"-\"}</TableCell>\r\n                                <TableCell>\r\n                                    {row.expenseAmount || \"-\"}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <IconButton\r\n                                        aria-label=\"delete\"\r\n                                        onClick={() =>\r\n                                            handleDeleteClick(row.id)\r\n                                        }\r\n                                    >\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        {filteredItems.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell colSpan={6} align=\"center\">\r\n                                    No records found.\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Dialog open={open} onClose={handleDeleteCancel}>\r\n                <DialogTitle>Confirm Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete this expense? This\r\n                        action cannot be undone.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <IconButton onClick={handleDeleteCancel} color=\"primary\">\r\n                        Cancel\r\n                    </IconButton>\r\n                    <IconButton onClick={handleDeleteConfirm} color=\"secondary\">\r\n                        Delete\r\n                    </IconButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ExpenseTable;\r\n","import React from \"react\";\r\nimport {\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tDialogActions,\r\n\tTextField,\r\n\tButton,\r\n\tMenuItem,\r\n\tGrid,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addExpense } from \"../../redux/slices/expenseSlice\";\r\nimport dayjs from \"dayjs\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst incomeTypes = [\"Salary\", \"Bonus\", \"Investment\", \"Rental Income\", \"Other\"];\r\nconst expenseTypes = [\"Rent\", \"Food\", \"Travel\", \"Cosmetics\", \"Bills\", \"Other\"];\r\n\r\nconst ExpenseForm = ({ open, handleClose }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { user } = useSelector((state) => state.auth);\r\n\r\n\t// Validation schema using Yup\r\n\tconst validationSchema = Yup.object().shape({\r\n\t\tdate: Yup.date().required(\"Date is required.\"),\r\n\t\tincomeType: Yup.string().required(\"Income type is required.\"),\r\n\t\tincomeAmount: Yup.number()\r\n\t\t\t.required()\r\n\t\t\t.typeError(\"Must be a number.\")\r\n\t\t\t.positive(\"Amount must be positive.\")\r\n\t\t\t.max(999999999, \"Amount too large.\"),\r\n\t\texpenseType: Yup.string().required(\"Expense type is required.\"),\r\n\t\texpenseAmount: Yup.number()\r\n\t\t\t.required(\"Expense amount is required.\")\r\n\t\t\t.typeError(\"Must be a number.\")\r\n\t\t\t.positive(\"Amount must be positive.\")\r\n\t\t\t.max(999999999, \"Amount too large.\"),\r\n\t});\r\n\r\n\tconst initialValues = {\r\n\t\tdate: dayjs().format(\"YYYY-MM-DD\"),\r\n\t\tincomeType: \"\",\r\n\t\tincomeAmount: \"\",\r\n\t\texpenseType: \"\",\r\n\t\texpenseAmount: \"\",\r\n\t};\r\n\r\n\tconst handleSubmit = (values, { resetForm }) => {\r\n\t\tconst expenseData = {\r\n\t\t\tuserId: user.uid,\r\n\t\t\tdate: new Date(values.date),\r\n\t\t\tincomeType: values.incomeType,\r\n\t\t\tincomeAmount: values.incomeAmount\r\n\t\t\t\t? parseFloat(values.incomeAmount)\r\n\t\t\t\t: 0,\r\n\t\t\texpenseType: values.expenseType || null,\r\n\t\t\texpenseAmount: values.expenseAmount\r\n\t\t\t\t? parseFloat(values.expenseAmount)\r\n\t\t\t\t: 0,\r\n\t\t};\r\n\t\tdispatch(addExpense(expenseData));\r\n\t\thandleClose();\r\n\t\tresetForm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<DialogTitle>Add Income/Expense</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={initialValues}\r\n\t\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({\r\n\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"10px\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tas={TextField}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Date\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"date\"\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\terror={touched.date && !!errors.date}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\ttouched.date && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage name=\"date\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tas={TextField}\r\n\t\t\t\t\t\t\t\t\t\tselect\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Income Type\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"incomeType\"\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\ttouched.incomeType && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage name=\"incomeType\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{incomeTypes.map((option) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tas={TextField}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Income Amount\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"incomeAmount\"\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\ttouched.incomeAmount &&\r\n\t\t\t\t\t\t\t\t\t\t\t!!errors.incomeAmount\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\ttouched.incomeAmount && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage name=\"incomeAmount\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!values.incomeType}\r\n\t\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t\t!values.incomeType\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"Select any Income Type\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tas={TextField}\r\n\t\t\t\t\t\t\t\t\t\tselect\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Expense Type\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"expenseType\"\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\ttouched.expenseType && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage name=\"expenseType\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{expenseTypes.map((option) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tas={TextField}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Expense Amount\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"expenseAmount\"\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\ttouched.expenseAmount &&\r\n\t\t\t\t\t\t\t\t\t\t\t!!errors.expenseAmount\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\ttouched.expenseAmount && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage name=\"expenseAmount\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!values.expenseType}\r\n\t\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t\t!values.expenseType\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"Select any Expense Type\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t<Button onClick={handleClose} color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tButton,\r\n\tTypography,\r\n\tPaper,\r\n\tCircularProgress,\r\n\tBox,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n\tPieChart,\r\n\tPie,\r\n\tCell,\r\n\tBarChart,\r\n\tBar,\r\n\tXAxis,\r\n\tYAxis,\r\n\tTooltip,\r\n\tLegend,\r\n\tResponsiveContainer,\r\n} from \"recharts\";\r\nimport {\r\n\tsetReport,\r\n\tsetExpenseData,\r\n\tsetIncomeTotal,\r\n\tsetExpenseTotal,\r\n} from \"../../redux/slices/reportSlice\";\r\n\r\nconst Report = () => {\r\n\tconst { items } = useSelector((state) => state.expenses);\r\n\tconst dispatch = useDispatch();\r\n\tconst { reportData, expenseData, incomeTotal, expenseTotal } = useSelector(\r\n\t\t(state) => state.report\r\n\t); //report data from Redux\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst generateReport = () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\tconst income = items.reduce(\r\n\t\t\t(acc, item) => acc + (item.incomeAmount || 0),\r\n\t\t\t0\r\n\t\t);\r\n\t\tconst expenses = items.reduce(\r\n\t\t\t(acc, item) => acc + (item.expenseAmount || 0),\r\n\t\t\t0\r\n\t\t);\r\n\t\tconst net = income - expenses;\r\n\r\n\t\tconst expenseCategories = items.reduce((acc, item) => {\r\n\t\t\tif (item.expenseType) {\r\n\t\t\t\tacc[item.expenseType] =\r\n\t\t\t\t\t(acc[item.expenseType] || 0) + (item.expenseAmount || 0);\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\tconst expenseChartData = Object.entries(expenseCategories).map(\r\n\t\t\t([category, amount]) => ({\r\n\t\t\t\tname: category,\r\n\t\t\t\tvalue: amount,\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\t// array for the report content\r\n\t\tconst reportContent = [\r\n\t\t\t{ label: \"Expense \", value: \"\" },\r\n\t\t\t{ label: \"Total Income\", value: `₹${income.toFixed(2)}` },\r\n\t\t\t{ label: \"Total Expenses\", value: `₹${expenses.toFixed(2)}` },\r\n\t\t\t{ label: \"Net Savings\", value: `₹${net < 0 ? 0 : net.toFixed(2)}` },\r\n\t\t\t{ label: \"Net Loss\", value: `₹${net > 0 ? 0 : net.toFixed(2)}` },\r\n\t\t\t{ label: \"Expenses by Category\", value: \"\" },\r\n\t\t\t...Object.entries(expenseCategories).map(([category, amount]) => ({\r\n\t\t\t\tlabel: category,\r\n\t\t\t\tvalue: `₹${amount.toFixed(2)}`,\r\n\t\t\t})),\r\n\t\t\t{ label: \"Recommendations\", value: \"\" },\r\n\t\t\t...(net < 0\r\n\t\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"1. Consider reducing discretionary spending to improve net savings.\",\r\n\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"2. Review recurring expenses and identify potential savings.\",\r\n\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t\t: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"1. Maintain current spending habits to sustain savings.\",\r\n\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"2. Consider investing surplus income for better financial growth.\",\r\n\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]),\r\n\t\t];\r\n\r\n\t\t// Dispatch actions to update the Redux store\r\n\t\tdispatch(setReport(reportContent));\r\n\t\tdispatch(setExpenseData(expenseChartData));\r\n\t\tdispatch(setIncomeTotal(income));\r\n\t\tdispatch(setExpenseTotal(expenses));\r\n\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper style={{ padding: \"20px\", marginTop: \"20px\" }}>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant=\"h2\"\r\n\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\tborderRadius=\"20px\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tboxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tFinancial Report\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tonClick={generateReport}\r\n\t\t\t\tstyle={{ marginTop: \"10px\" }}\r\n\t\t\t>\r\n\t\t\t\tGenerate Report\r\n\t\t\t</Button>\r\n\t\t\t{loading && (\r\n\t\t\t\t<Box\r\n\t\t\t\t\tposition=\"fixed\"\r\n\t\t\t\t\ttop=\"0\"\r\n\t\t\t\t\tleft=\"0\"\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\tbgcolor=\"rgba(255, 255, 255, 0.8)\"\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\theight=\"100vh\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<CircularProgress style={{ marginLeft: \"10px\" }} />\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t\t{reportData.length > 0 && (\r\n\t\t\t\t<Box style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tborderRadius: 1,\r\n\t\t\t\t\t\t\tp: 2,\r\n\t\t\t\t\t\t\tbgcolor: \"#ede8eb\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{reportData.map((item, index) => (\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tvariant=\"body1\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: \"10px\",\r\n\t\t\t\t\t\t\t\t\tfontWeight:\r\n\t\t\t\t\t\t\t\t\t\titem.value === \"\" ? \"bold\" : \"normal\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{item.label}\r\n\t\t\t\t\t\t\t\t{item.value && `: ${item.value}`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<h2>Chart Representations</h2>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tborderRadius: 1,\r\n\t\t\t\t\t\t\tp: 2,\r\n\t\t\t\t\t\t\tbgcolor: \"#ede8eb\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t<BarChart\r\n\t\t\t\t\t\t\t\tdata={[\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tname: \"Total Income\",\r\n\t\t\t\t\t\t\t\t\t\tvalue: incomeTotal,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tname: \"Total Expenses\",\r\n\t\t\t\t\t\t\t\t\t\tvalue: expenseTotal,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\tmargin={{\r\n\t\t\t\t\t\t\t\t\ttop: 20,\r\n\t\t\t\t\t\t\t\t\tright: 30,\r\n\t\t\t\t\t\t\t\t\tleft: 20,\r\n\t\t\t\t\t\t\t\t\tbottom: 5,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<XAxis\r\n\t\t\t\t\t\t\t\t\tdataKey=\"name\"\r\n\t\t\t\t\t\t\t\t\ttick={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#000\",\r\n\t\t\t\t\t\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t\t\tfill: \"#4a4a4a\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<YAxis\r\n\t\t\t\t\t\t\t\t\ttick={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#000\",\r\n\t\t\t\t\t\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t\t\tfill: \"#4a4a4a\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t\t\t\t<Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n\t\t\t\t\t\t\t</BarChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t<div style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\t\tExpenses by Category\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<PieChart>\r\n\t\t\t\t\t\t\t\t<Pie\r\n\t\t\t\t\t\t\t\t\tdata={expenseData}\r\n\t\t\t\t\t\t\t\t\tcx=\"50%\"\r\n\t\t\t\t\t\t\t\t\tcy=\"50%\"\r\n\t\t\t\t\t\t\t\t\tlabelLine={false}\r\n\t\t\t\t\t\t\t\t\touterRadius={80}\r\n\t\t\t\t\t\t\t\t\tfill=\"#8884d8\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{expenseData.map((entry, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\t\t\t\t\tkey={`cell-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\tfill={`#${Math.floor(\r\n\t\t\t\t\t\t\t\t\t\t\t\tMath.random() * 16777215\r\n\t\t\t\t\t\t\t\t\t\t\t).toString(16)}`}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Pie>\r\n\t\t\t\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t\t\t\t<Legend />\r\n\t\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport default Report;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Typography,\r\n    Paper,\r\n    CircularProgress,\r\n    Box,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    setAiReport,\r\n    setAiIncomeTotal,\r\n    setAiExpenseTotal,\r\n    setHasRisk,\r\n} from \"../../redux/slices/aiReportSlice\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\nconst AiReport = () => {\r\n    const dispatch = useDispatch();\r\n    const { items } = useSelector((state) => state.expenses);\r\n\r\n    const { aiReportData, hasRisk } = useSelector((state) => state.aiReport);\r\n\r\n    const [report, setReport] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const prepareData = (items) => {\r\n        const incomeTotal = items.reduce(\r\n            (acc, item) => acc + (item.incomeAmount || 0),\r\n            0\r\n        );\r\n        const expenseTotal = items.reduce(\r\n            (acc, item) => acc + (item.expenseAmount || 0),\r\n            0\r\n        );\r\n        const netSavings = incomeTotal - expenseTotal;\r\n\r\n        const expenseCategories = items.reduce((acc, item) => {\r\n            if (item.expenseType) {\r\n                acc[item.expenseType] =\r\n                    (acc[item.expenseType] || 0) + (item.expenseAmount || 0);\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        return {\r\n            incomeTotal,\r\n            expenseTotal,\r\n            netSavings,\r\n            expenseCategories,\r\n        };\r\n    };\r\n\r\n    const createModel = () => {\r\n        const model = tf.sequential();\r\n\r\n        model.add(\r\n            tf.layers.dense({ inputShape: [2], units: 16, activation: \"relu\" })\r\n        );\r\n        model.add(tf.layers.dense({ units: 8, activation: \"relu\" }));\r\n        model.add(tf.layers.dense({ units: 1, activation: \"sigmoid\" }));\r\n\r\n        model.compile({\r\n            optimizer: \"adam\",\r\n            loss: \"binaryCrossentropy\",\r\n            metrics: [\"accuracy\"],\r\n        });\r\n        return model;\r\n    };\r\n\r\n    const trainModel = async (model, data) => {\r\n        const { incomeTotal, expenseTotal } = data;\r\n\r\n        const xs = tf.tensor2d([[incomeTotal, expenseTotal]]);\r\n        const ys = tf.tensor2d([[0.5]]); // Example target\r\n\r\n        await model.fit(xs, ys, {\r\n            epochs: 100,\r\n            batchSize: 1,\r\n        });\r\n\r\n        return model;\r\n    };\r\n\r\n    const generateFinancialReport = async (items) => {\r\n        const data = prepareData(items);\r\n        const model = createModel();\r\n\r\n        await trainModel(model, data);\r\n\r\n        const prediction = model\r\n            .predict(tf.tensor2d([[data.incomeTotal, data.expenseTotal]]))\r\n            .arraySync();\r\n\r\n        // Based on the prediction, generate the report\r\n        dispatch(setHasRisk(data.netSavings < 0));\r\n        return `Net Savings Prediction: ${\r\n            data.netSavings > 0 ? \"Positive\" : \"Negative\"\r\n        } \\n\r\n      Your estimated savings trend is: ${\r\n          prediction[0][0] > 0.5 ? \"Favorable\" : \"Needs Improvement\"\r\n      }.\\n\r\n      Consider reviewing your expenses in categories such as ${Object.keys(\r\n          data.expenseCategories\r\n      ).join(\", \")}.`;\r\n    };\r\n\r\n    const generateReport = async () => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const generatedReport = await generateFinancialReport(items);\r\n            setReport(generatedReport);\r\n\r\n            // Calculate income, expenses, and net\r\n            const income = items.reduce(\r\n                (acc, item) => acc + (item.incomeAmount || 0),\r\n                0\r\n            );\r\n            const expenses = items.reduce(\r\n                (acc, item) => acc + (item.expenseAmount || 0),\r\n                0\r\n            );\r\n            const net = income - expenses;\r\n\r\n            // Categorize expenses\r\n            const expenseCategories = items.reduce((acc, item) => {\r\n                if (item.expenseType) {\r\n                    acc[item.expenseType] =\r\n                        (acc[item.expenseType] || 0) +\r\n                        (item.expenseAmount || 0);\r\n                }\r\n                return acc;\r\n            }, {});\r\n\r\n            // Prepare report content\r\n            const reportContent = [\r\n                { label: \"Expense \", value: \"\" },\r\n                { label: \"Total Income\", value: `₹${income.toFixed(2)}` },\r\n                { label: \"Total Expenses\", value: `₹${expenses.toFixed(2)}` },\r\n                {\r\n                    label: \"Net Savings\",\r\n                    value: `₹${net < 0 ? 0 : net.toFixed(2)}`,\r\n                },\r\n                {\r\n                    label: \"Net Loss\",\r\n                    value: `₹${net > 0 ? 0 : net.toFixed(2)}`,\r\n                },\r\n                { label: \"Expenses by Category\", value: \"\" },\r\n                ...Object.entries(expenseCategories).map(\r\n                    ([category, amount]) => ({\r\n                        label: category,\r\n                        value: `₹${amount.toFixed(2)}`,\r\n                    })\r\n                ),\r\n            ];\r\n\r\n            // Dispatch actions to update the Redux store\r\n            dispatch(\r\n                setAiReport({ report: generatedReport, content: reportContent })\r\n            ); // Pass an object\r\n            dispatch(setAiIncomeTotal(income)); // Pass the latest income total\r\n            dispatch(setAiExpenseTotal(expenses)); // Pass the latest expense total\r\n        } catch (error) {\r\n            console.error(\"Error generating report:\", error);\r\n            setReport(\"Failed to generate report. Please try again later.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper\r\n            style={{\r\n                padding: \"20px\",\r\n                marginTop: \"20px\",\r\n                // background: hasRisk === null ? 'white' : hasRisk ? 'red' : 'green'\r\n            }}\r\n        >\r\n            <Typography\r\n                variant=\"h2\"\r\n                textAlign=\"center\"\r\n                borderRadius=\"20px\"\r\n                sx={{\r\n                    boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\r\n                }}\r\n            >\r\n                AI-Powered Financial Report\r\n            </Typography>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={generateReport}\r\n                style={{ marginTop: \"10px\" }}\r\n            >\r\n                Generate AI Report\r\n            </Button>\r\n            {loading && (\r\n                <Box\r\n                    position=\"fixed\"\r\n                    top=\"0\"\r\n                    left=\"0\"\r\n                    width=\"100%\"\r\n                    bgcolor=\"rgba(255, 255, 255, 0.8)\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    height=\"100vh\"\r\n                >\r\n                    <CircularProgress style={{ marginLeft: \"10px\" }} />\r\n                </Box>\r\n            )}\r\n            {report && (\r\n                <Box\r\n                    variant=\"h6\"\r\n                    bgcolor={\r\n                        hasRisk === null\r\n                            ? \"white\"\r\n                            : hasRisk\r\n                            ? \"#f5252f\"\r\n                            : \"#28de4f\"\r\n                    }\r\n                    position={\"relative\"}\r\n                    sx={{\r\n                        borderRadius: 1,\r\n                        px: 4,\r\n                        py: 8,\r\n                        overflow: \"hidden\",\r\n                        whiteSpace: \"pre-line\",\r\n                        mt: 2,\r\n                    }}\r\n                >\r\n                    {report}\r\n                </Box>\r\n            )}\r\n            {aiReportData.report?.length > 0 && (\r\n                <Typography variant=\"body2\" style={{ marginTop: \"20px\" }}>\r\n                    {!report ? \"Last Generated Report\" : \"Generated Report\"}\r\n                    <Box\r\n                        sx={{\r\n                            borderRadius: 1,\r\n                            p: 2,\r\n                            bgcolor:\r\n                                hasRisk === null\r\n                                    ? \"white\"\r\n                                    : hasRisk\r\n                                    ? \"#f5252f\"\r\n                                    : \"#28de4f\",\r\n                        }}\r\n                    >\r\n                        {hasRisk !== null && (\r\n                            <Typography variant=\"h4\" textAlign=\"center\">\r\n                                {hasRisk ? \"Need Attension\" : \"Good\"}\r\n                            </Typography>\r\n                        )}\r\n                        {aiReportData.content.map((item, index) => (\r\n                            <Typography\r\n                                key={index}\r\n                                variant=\"body1\"\r\n                                style={{\r\n                                    marginBottom: \"10px\",\r\n                                    fontWeight:\r\n                                        item.value === \"\" ? \"bold\" : \"normal\",\r\n                                }}\r\n                            >\r\n                                {item.label}\r\n                                {item.value && `: ${item.value}`}\r\n                            </Typography>\r\n                        ))}\r\n\r\n                        {!report && (\r\n                            <Box\r\n                                variant=\"h6\"\r\n                                bgcolor={\"#58b9ed\"}\r\n                                position={\"relative\"}\r\n                                sx={{\r\n                                    borderRadius: 1,\r\n                                    px: 2,\r\n                                    py: 8,\r\n                                    overflow: \"hidden\",\r\n                                    whiteSpace: \"pre-line\",\r\n                                }}\r\n                            >\r\n                                <Box\r\n                                    position={\"absolute\"}\r\n                                    variant=\"h6\"\r\n                                    bgcolor={\"violet\"}\r\n                                    sx={{\r\n                                        left: \"-5px\",\r\n                                        top: \"20px\",\r\n                                        borderRadius: 2,\r\n                                        px: 2,\r\n                                        width: \"120px\",\r\n                                        py: \"4px\",\r\n                                    }}\r\n                                >\r\n                                    Model Suggestion\r\n                                </Box>\r\n\r\n                                {aiReportData?.report}\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                </Typography>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default AiReport;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        \"aria-controls\": `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function ReportTabs({ Report, AiReport, OpenAiReport }) {\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ bgcolor: \"background.paper\", width: \"100%\" }}>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"inherit\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                >\r\n                    <Tab label=\"Financial Report\" {...a11yProps(0)} />\r\n                    <Tab label=\"AI Report (custom model)\" {...a11yProps(1)} />\r\n                    <Tab label=\"openAI Report\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n                <Report />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n                <AiReport />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n                <OpenAiReport />\r\n            </TabPanel>\r\n        </Box>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@mui/material\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n                    Developed by Ajayraj\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Typography,\r\n    Paper,\r\n    CircularProgress,\r\n    Box,\r\n} from \"@mui/material\";\r\nimport { fetchAiResponse } from \"../../utils/fetchAiResponse\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setOpenAiResponse } from \"../../redux/slices/openAiSlice\";\r\nimport aiImage from \"../../assets/images/ai.jpg\";\r\nimport aiImageWhite from \"../../assets/images/ai2.png\";\r\n\r\nconst OpenAiReport = () => {\r\n    const { items } = useSelector((state) => state.expenses);\r\n    const dispatch = useDispatch();\r\n\r\n    const [aiResponse, setAiResponse] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const { openAiResponse } = useSelector((state) => state.openAi);\r\n\r\n    const generateReport = () => {\r\n        const income = items.reduce(\r\n            (acc, item) => acc + (item.incomeAmount || 0),\r\n            0\r\n        );\r\n        const expenses = items.reduce(\r\n            (acc, item) => acc + (item.expenseAmount || 0),\r\n            0\r\n        );\r\n        const net = income - expenses;\r\n\r\n        const expenseCategories = items.reduce((acc, item) => {\r\n            if (item.expenseType) {\r\n                acc[item.expenseType] =\r\n                    (acc[item.expenseType] || 0) + (item.expenseAmount || 0);\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        // Convert report content to text format\r\n        const reportText = `\r\n            I need a financial report based on the following data with your suggestions to improve saving habit please give full details:\r\n\r\n            1. **Total Income:** ₹${income.toFixed(2)}\r\n            2. **Total Expenses:** ₹${expenses.toFixed(2)}\r\n            3. **Net Savings:** ₹${net < 0 ? 0 : net.toFixed(2)}\r\n            4. **Net Loss:** ₹${net > 0 ? 0 : net.toFixed(2)}\r\n            5. **Expenses by Category:**\r\n            ${Object.entries(expenseCategories)\r\n                .map(\r\n                    ([category, amount]) =>\r\n                        `   - ${category}: ₹${amount.toFixed(2)}`\r\n                )\r\n                .join(\"\\n\")}\r\n            6. **Recommendations:**\r\n            ${\r\n                net < 0\r\n                    ? '   - Consider reducing discretionary spending to improve net savings.\\n   - Review recurring expenses and identify potential savings.\"cut\"'\r\n                    : '   - Maintain current spending habits to sustain savings.\\n   - Consider investing surplus income for better financial growth.\"cut\" '\r\n            }\r\n        `;\r\n\r\n        return reportText;\r\n    };\r\n\r\n    const generateAiReport = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await fetchAiResponse(generateReport());\r\n            const result = response.split('\"cut\"')[1].trim(); // Gets everything after \"cut\" because the AI response include the input data too\r\n\r\n            setAiResponse(result);\r\n            dispatch(setOpenAiResponse(result));\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper\r\n            style={{\r\n                padding: \"20px\",\r\n                marginTop: \"20px\",\r\n                backgroundImage: `url(${aiImage})`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n            }}\r\n        >\r\n            <Typography\r\n                variant=\"h2\"\r\n                textAlign=\"center\"\r\n                borderRadius=\"20px\"\r\n                sx={{\r\n                    boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\r\n                    backgroundImage: `url(${aiImageWhite})`,\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center\",\r\n                    border: \"4px solid grey\",\r\n                }}\r\n            >\r\n                OpenAI-Powered Financial Report\r\n            </Typography>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={generateAiReport}\r\n                disabled={loading}\r\n                style={{ marginTop: \"10px\" }}\r\n            >\r\n                Generate AI Report\r\n            </Button>\r\n            {loading && (\r\n                <Box\r\n                    position=\"fixed\"\r\n                    top=\"0\"\r\n                    left=\"0\"\r\n                    width=\"100%\"\r\n                    bgcolor=\"rgba(255, 255, 255, 0.8)\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    height=\"100vh\"\r\n                >\r\n                    <CircularProgress style={{ marginLeft: \"10px\" }} />\r\n                </Box>\r\n            )}\r\n            {aiResponse ? (\r\n                <Box\r\n                    sx={{\r\n                        marginTop: \"20px\",\r\n                        padding: \"10px\",\r\n                        backgroundColor: \"#f0f0f0\",\r\n                        borderRadius: \"4px\",\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h6\">AI Suggestions:</Typography>\r\n                    <Typography whiteSpace={\"pre-line\"}>\r\n                        {aiResponse}\r\n                    </Typography>\r\n                </Box>\r\n            ) : (\r\n                <Box\r\n                    sx={{\r\n                        marginTop: \"20px\",\r\n                        padding: \"10px\",\r\n                        backgroundColor: \"#f0f0f0\",\r\n                        borderRadius: \"4px\",\r\n                    }}\r\n                >\r\n                    {openAiResponse ? (\r\n                        <Typography variant=\"h6\">\r\n                            Previous AI Suggestions:\r\n                        </Typography>\r\n                    ) : (\r\n                        <Typography variant=\"h6\">\r\n                            Generate Report for getting suggessions\r\n                        </Typography>\r\n                    )}\r\n                    <Typography whiteSpace={\"pre-line\"}>\r\n                        {openAiResponse}\r\n                    </Typography>\r\n                </Box>\r\n            )}\r\n            {error && (\r\n                <Typography\r\n                    variant=\"body1\"\r\n                    color=\"error\"\r\n                    style={{ marginTop: \"10px\" }}\r\n                >\r\n                    Error: {error}\r\n                </Typography>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default OpenAiReport;\r\n","// src/utils/fetchAiResponse.js\r\n\r\nimport axios from \"axios\";\r\n\r\nconst HUGGING_FACE_API_URL = process.env.REACT_APP_HUGGING_FACE_API_URL;\r\nconst HUGGING_FACE_API_KEY = process.env.REACT_APP_HUGGING_FACE_API_KEY;\r\n\r\nexport const fetchAiResponse = async (text) => {\r\n    try {\r\n        const response = await axios.post(\r\n            HUGGING_FACE_API_URL,\r\n            { inputs: text },\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${HUGGING_FACE_API_KEY}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }\r\n        );\r\n\r\n        return response.data.length > 0\r\n            ? response.data[0].generated_text\r\n            : \"No response from AI\";\r\n    } catch (error) {\r\n        console.error(\"Error fetching AI response:\", error);\r\n        throw new Error(\"Failed to fetch AI response\");\r\n    }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Grid, Button, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\r\nimport ExpenseTable from '../Expenses/ExpenseTable';\r\nimport ExpenseForm from '../Expenses/ExpenseForm';\r\nimport Report from './Report';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchExpenses } from '../../redux/slices/expenseSlice';\r\nimport AiReport from './AiReport';\r\nimport ReportTabs from '../ReportTabs';\r\nimport Footer from '../shared/Footer';\r\nimport OpenAiReport from './openAiReport';\r\n\r\nconst Dashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector((state) => state.auth);\r\n    const { items, status } = useSelector((state) => state.expenses);\r\n    const [openForm, setOpenForm] = useState(false);\r\n    const [filter, setFilter] = useState('all'); // all, day, week, month\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            dispatch(fetchExpenses(user.uid));\r\n        }\r\n    }, [dispatch, user]);\r\n\r\n    const handleAddClick = () => {\r\n        setOpenForm(true);\r\n    };\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Container maxWidth=\"lg\" style={{ marginTop: '20px',marginBottom:'20px',minHeight:'90vh' }}>\r\n            <Grid container spacing={3} style={{ paddingTop: '14%' }}>\r\n                <Grid item xs={12}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddClick}>\r\n                        Add Income/Expense\r\n                    </Button>\r\n                    <FormControl size=\"small\" style={{ marginLeft: '20px', minWidth: 120 }}>\r\n                        <InputLabel id=\"filter-label\">Filter</InputLabel>\r\n                        <Select\r\n                            labelId=\"filter-label\"\r\n                            value={filter}\r\n                            label=\"Filter\"\r\n                            onChange={handleFilterChange}\r\n                        >\r\n                            <MenuItem value=\"all\">All</MenuItem>\r\n                            <MenuItem value=\"day\">Day(Today)</MenuItem>\r\n                            <MenuItem value=\"week\">Week(This Week)</MenuItem>\r\n                            <MenuItem value=\"month\">Month(This Month)</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <ExpenseTable filter={filter} />\r\n                </Grid>\r\n                {items.length > 0 &&\r\n                    <Grid item xs={12}>\r\n                        <ReportTabs\r\n                            Report={Report}\r\n                            AiReport={AiReport} \r\n                            OpenAiReport={OpenAiReport}/>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n            <ExpenseForm open={openForm} handleClose={() => setOpenForm(false)} />\r\n        </Container>\r\n        <Footer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","filter","dispatch","useDispatch","items","status","useSelector","state","expenses","filteredItems","setFilteredItems","useState","open","setOpen","selectedExpenseId","setSelectedExpenseId","useEffect","now","dayjs","filtered","item","itemDate","date","toDate","Date","isSame","handleDeleteCancel","_jsx","Typography","children","_jsxs","_Fragment","TableContainer","component","Paper","style","marginTop","Table","TableHead","TableRow","TableCell","TableBody","map","row","format","incomeType","incomeAmount","expenseType","expenseAmount","IconButton","onClick","handleDeleteClick","id","DeleteIcon","length","colSpan","align","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","color","handleDeleteConfirm","removeExpense","incomeTypes","expenseTypes","handleClose","user","auth","validationSchema","Yup","shape","required","typeError","positive","max","initialValues","Formik","onSubmit","handleSubmit","values","_ref2","resetForm","expenseData","userId","uid","parseFloat","addExpense","_ref3","handleChange","setFieldValue","errors","touched","Form","Grid","container","spacing","xs","Field","as","TextField","label","type","name","fullWidth","InputLabelProps","shrink","error","helperText","ErrorMessage","select","onChange","option","MenuItem","value","disabled","title","Button","variant","Report","reportData","incomeTotal","expenseTotal","report","loading","setLoading","padding","textAlign","borderRadius","sx","boxShadow","generateReport","income","reduce","acc","net","expenseCategories","expenseChartData","Object","entries","category","amount","reportContent","toFixed","setReport","setExpenseData","setIncomeTotal","setExpenseTotal","Box","position","top","left","width","bgcolor","display","justifyContent","alignItems","height","CircularProgress","marginLeft","p","index","marginBottom","fontWeight","ResponsiveContainer","BarChart","data","margin","right","bottom","XAxis","dataKey","tick","fontSize","fill","YAxis","Tooltip","Bar","PieChart","Pie","cx","cy","labelLine","outerRadius","entry","Cell","Math","floor","random","toString","Legend","AiReport","_aiReportData$report","aiReportData","hasRisk","aiReport","generateFinancialReport","async","netSavings","prepareData","model","createModel","tf","add","inputShape","units","activation","compile","optimizer","loss","metrics","ys","fit","epochs","batchSize","trainModel","prediction","predict","arraySync","setHasRisk","keys","join","generatedReport","setAiReport","content","setAiIncomeTotal","setAiExpenseTotal","console","px","py","overflow","whiteSpace","mt","TabPanel","props","other","role","hidden","a11yProps","ReportTabs","OpenAiReport","theme","useTheme","setValue","React","AppBar","Tabs","event","newValue","indicatorColor","textColor","Tab","dir","direction","Footer","Toolbar","flexGrow","aiResponse","setAiResponse","setError","openAiResponse","openAi","backgroundImage","aiImage","backgroundSize","backgroundPosition","aiImageWhite","border","response","axios","post","process","inputs","text","headers","Authorization","generated_text","Error","fetchAiResponse","result","split","trim","setOpenAiResponse","err","message","backgroundColor","Dashboard","openForm","setOpenForm","setFilter","fetchExpenses","Container","maxWidth","minHeight","paddingTop","handleAddClick","FormControl","size","minWidth","InputLabel","Select","labelId","target","ExpenseTable","ExpenseForm"],"sourceRoot":""}