{"version":3,"file":"static/js/17.23e25672.chunk.js","mappings":"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","sources":["components/Auth/Login.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Typography,\r\n    Box,\r\n    TextField,\r\n    IconButton,\r\n    InputAdornment,\r\n    CircularProgress,\r\n} from \"@mui/material\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../../redux/slices/authSlice\";\r\nimport { auth, provider } from \"../../firebase\";\r\nimport { signInWithPopup } from \"firebase/auth\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\nconst Login = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email(\"Invalid email\")\r\n            .required(\"Email is required\"),\r\n        password: Yup.string()\r\n            .required(\"Password is required\")\r\n            .min(6, \"Password must be at least 6 characters\"),\r\n    });\r\n\r\n    const handleEmailLogin = async (values, { setSubmitting, setErrors }) => {\r\n        setLoading(true);\r\n        try {\r\n            const userCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                values.email,\r\n                values.password\r\n            );\r\n            const user = userCredential.user;\r\n\r\n            const userDocRef = doc(db, \"users\", user.uid);\r\n            const userDoc = await getDoc(userDocRef);\r\n\r\n            if (userDoc.exists()) {\r\n                const userData = userDoc.data();\r\n                dispatch(\r\n                    setUser({\r\n                        uid: user.uid,\r\n                        fullName: userData.fullName || \"Unknown\",\r\n                        email: user.email,\r\n                        profession: userData.profession || \"Unknown\",\r\n                    })\r\n                );\r\n\r\n                navigate(\"/dashboard\");\r\n            } else {\r\n                console.error(\"No such user document!\");\r\n                alert(\"User document not found.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error signing in: \", error);\r\n            setErrors({ email: error.message });\r\n        } finally {\r\n            setLoading(false);\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleGoogleSignIn = async () => {\r\n        try {\r\n            const result = await signInWithPopup(auth, provider);\r\n            const { displayName, email, uid } = result.user;\r\n            dispatch(\r\n                setUser({\r\n                    uid,\r\n                    fullName: displayName,\r\n                    email,\r\n                    profession: \"Unknown\",\r\n                })\r\n            );\r\n            navigate(\"/dashboard\");\r\n        } catch (error) {\r\n            console.error(\"Error signing in: \", error);\r\n        }\r\n    };\r\n\r\n    const handleSignUp = () => {\r\n        navigate(\"/signup\");\r\n    };\r\n\r\n    return (\r\n        <Container\r\n            maxWidth=\"sm\"\r\n            style={{\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: \"#f0f0f0\",\r\n                    padding: \"30px\",\r\n                    borderRadius: \"10px\",\r\n                    boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.1)\",\r\n                    textAlign: \"center\",\r\n                    width: \"100%\",\r\n                    maxWidth: \"400px\",\r\n                }}\r\n            >\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Welcome to Daily Expense Tracker\r\n                </Typography>\r\n                <Formik\r\n                    initialValues={{ email: \"\", password: \"\" }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={handleEmailLogin}\r\n                >\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        isSubmitting,\r\n                    }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                required\r\n                                error={touched.email && Boolean(errors.email)}\r\n                                helperText={touched.email && errors.email}\r\n                            />\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                name=\"password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                required\r\n                                error={\r\n                                    touched.password && Boolean(errors.password)\r\n                                }\r\n                                helperText={touched.password && errors.password}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    setShowPassword(\r\n                                                        (prev) => !prev\r\n                                                    )\r\n                                                }\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showPassword ? (\r\n                                                    <VisibilityOff />\r\n                                                ) : (\r\n                                                    <Visibility />\r\n                                                )}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                fullWidth\r\n                                sx={{ marginBottom: \"20px\" }}\r\n                                disabled={loading || isSubmitting}\r\n                            >\r\n                                {loading ? (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        color=\"inherit\"\r\n                                    />\r\n                                ) : (\r\n                                    \"Login\"\r\n                                )}\r\n                            </Button>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={handleGoogleSignIn}\r\n                    fullWidth\r\n                >\r\n                    Sign in with Google\r\n                </Button>\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    onClick={handleSignUp}\r\n                    fullWidth\r\n                    sx={{ marginTop: \"10px\" }}\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["Login","showPassword","setShowPassword","useState","loading","setLoading","navigate","useNavigate","dispatch","useDispatch","validationSchema","Yup","shape","email","required","password","min","_jsx","Container","maxWidth","style","height","display","justifyContent","alignItems","children","_jsxs","Box","sx","backgroundColor","padding","borderRadius","boxShadow","textAlign","width","Typography","variant","gutterBottom","Formik","initialValues","onSubmit","async","values","_ref","setSubmitting","setErrors","user","signInWithEmailAndPassword","auth","userDocRef","doc","db","uid","userDoc","getDoc","exists","userData","data","setUser","fullName","profession","console","error","alert","message","_ref2","handleSubmit","handleChange","handleBlur","errors","touched","isSubmitting","TextField","label","type","name","value","onChange","onBlur","fullWidth","margin","Boolean","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","prev","edge","VisibilityOff","Visibility","Button","color","marginBottom","disabled","CircularProgress","size","result","signInWithPopup","provider","displayName","handleSignUp","marginTop","createSvgIcon","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","memoTheme","theme","maxHeight","whiteSpace","vars","palette","action","active","variants","inputAdornmentClasses","positionStart","hiddenLabel","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","className","component","disableTypography","variantProp","other","muiFormControl","useFormControl","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","as","clsx"],"sourceRoot":""}