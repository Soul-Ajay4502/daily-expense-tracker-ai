{"version":3,"file":"static/js/434.230a9566.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Visibility.js","components/Auth/Login.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import React, { useState } from 'react';\r\nimport { Button, Container, Typography, Box, TextField, IconButton, InputAdornment, CircularProgress } from '@mui/material';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setUser } from '../../redux/slices/authSlice';\r\nimport { auth, provider } from '../../firebase';\r\nimport { signInWithPopup } from 'firebase/auth';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../../firebase';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\n\r\nconst Login = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false); \r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email('Invalid email').required('Email is required'),\r\n    password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters'),\r\n  });\r\n\r\n  const handleEmailLogin = async (values, { setSubmitting, setErrors }) => {\r\n    setLoading(true); \r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, values.email, values.password);\r\n      const user = userCredential.user;\r\n\r\n      const userDocRef = doc(db, 'users', user.uid);\r\n      const userDoc = await getDoc(userDocRef);\r\n\r\n      if (userDoc.exists()) {\r\n        const userData = userDoc.data();\r\n        dispatch(setUser({\r\n          uid: user.uid,\r\n          fullName: userData.fullName || 'Unknown',\r\n          email: user.email,\r\n          profession: userData.profession || 'Unknown',\r\n        }));\r\n\r\n        navigate('/dashboard'); \r\n      } else {\r\n        console.error(\"No such user document!\");\r\n        alert(\"User document not found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error signing in: \", error);\r\n      setErrors({ email: error.message }); \r\n    } finally {\r\n      setLoading(false); \r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const { displayName, email, uid } = result.user;\r\n      dispatch(setUser({ uid, fullName: displayName, email, profession: 'Unknown' }));\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error(\"Error signing in: \", error);\r\n    }\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    navigate('/signup');\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" style={{ height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: '#f0f0f0',\r\n          padding: '30px',\r\n          borderRadius: '10px',\r\n          boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\r\n          textAlign: 'center',\r\n          width: '100%',\r\n          maxWidth: '400px',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Welcome to Daily Expense Tracker\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleEmailLogin}\r\n        >\r\n          {({ handleSubmit, handleChange, handleBlur, values, errors, touched, isSubmitting }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n                error={touched.email && Boolean(errors.email)}\r\n                helperText={touched.email && errors.email}\r\n              />\r\n              <TextField\r\n                label=\"Password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n                error={touched.password && Boolean(errors.password)}\r\n                helperText={touched.password && errors.password}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => setShowPassword((prev) => !prev)}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                sx={{ marginBottom: '20px' }}\r\n                disabled={loading || isSubmitting} \r\n              >\r\n                {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Login'}\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleGoogleSignIn} fullWidth>\r\n          Sign in with Google\r\n        </Button>\r\n        <Button variant=\"text\" color=\"primary\" onClick={handleSignUp} fullWidth sx={{ marginTop: '10px' }}>\r\n          Sign Up\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","memoTheme","_ref","theme","display","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","variants","style","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","children","className","component","disableTypography","variantProp","other","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","createSvgIcon","d","Login","showPassword","setShowPassword","useState","loading","setLoading","navigate","useNavigate","dispatch","useDispatch","validationSchema","Yup","shape","email","required","password","min","Container","maxWidth","height","justifyContent","Box","sx","backgroundColor","padding","borderRadius","boxShadow","textAlign","width","gutterBottom","Formik","initialValues","onSubmit","async","values","setSubmitting","setErrors","user","signInWithEmailAndPassword","auth","userDocRef","doc","db","uid","userDoc","getDoc","exists","userData","data","setUser","fullName","profession","console","error","alert","message","_ref2","handleSubmit","handleChange","handleBlur","errors","touched","isSubmitting","TextField","label","type","onChange","onBlur","fullWidth","margin","Boolean","helperText","InputProps","endAdornment","InputAdornment","IconButton","onClick","prev","edge","VisibilityOff","Visibility","Button","marginBottom","disabled","CircularProgress","result","signInWithPopup","provider","displayName","handleSignUp"],"sourceRoot":""}